name: Alpha - Build and Deploy

on:
  workflow_dispatch:
    inputs:
      runner_name:
        type: choice
        description: >
          Self-hosted runner to run the build. Leave blank (default value) to use the runner selected by GitHub
        options:
          - ''
          - bamboo
          - builder1
          - builder2
          - builder3
          - builder4
          - builder5
          - builder6
        default: ''
      build_description:
        description: >
          Optional additional info about the build
        type: string
      xcode_version_override:
        description: >
          Optional Xcode version override. Leave blank (default value) to use the default Xcode version; 
          pass a custom value (e.g. '16.0', '10.2.1', '11 Beta 7', '11.2 GM seed', etc) to use a different Xcode version for the build
        type: string
      build_version_override:
        description: >
          Optional build version override. Leave blank (default value) to use the default value derived from the branch name
        type: string
      analyze_archive:
        description: >
          Whether the archive should be analyzed during the build process (default: false)
        type: boolean
        default: false

concurrency:
  group: '${{ github.workflow }} (${{ github.head_ref || github.ref_name }})'
  cancel-in-progress: true

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  prepare:
    name: Prepare information
    runs-on: macos-15
    outputs:
      version: '9.9.9'  # TODO: Test only
      stage: 'Alpha'
      build_number: '${{ github.run_number }}'
      jira_summary: '${{ steps.jira.outputs.summary }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          ssh-key: ${{ secrets.IOS_DEPENDENCIES_READ_ONLY_SSH_KEY }}

      - name: Authorize SSH session
        env:
          SSH_KEY: ${{ secrets.IOS_DEPENDENCIES_READ_ONLY_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com > ~/.ssh/known_hosts
          echo "${SSH_KEY}" > ~/.ssh/ios_dependencies_ssh_key
          chmod 600 ~/.ssh/ios_dependencies_ssh_key
          ssh-agent -a "${SSH_AUTH_SOCK}" > /dev/null || true
          ssh-add ~/.ssh/ios_dependencies_ssh_key

      # When using Github runner images, the preferred way of setting the Ruby version is to use this official action instead of using rvm/rbenv
      - name: Install Ruby
        uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc  # v1.202.0

      # Skipping Ruby installation since it has been already installed by an action above
      - name: Install required dependencies
        if: false # TODO: Test only
        run: ./bootstrap.sh --skip-ruby

      - name: Jira Login
        if: false # TODO: Test only
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: '${{ secrets.JIRA_URL }}'
          JIRA_USER_EMAIL: '${{ secrets.JIRA_USER }}'
          JIRA_API_TOKEN: '${{ secrets.JIRA_TOKEN }}'

      - name: Get Jira Issue Number from Branch Name
        if: false # TODO: Test only
        id: jira
        uses: tangem-developments/jira-action@master
        with:
          action: getBranchSummary
          branch-name: '${{ github.ref_name }}'

      - name: Create version
        if: false # TODO: Test only
        id: version
        env:
          JIRA_ISSUE_KEY: '${{ steps.jira.outputs.key }}'
          BUILD_VERSION_OVERRIDE: '${{ inputs.build_version_override }}'
          BRANCH_NAME: '${{ github.head_ref || github.ref_name }}'
          BUILD_VERSION_FALLBACK: 'Alpha'
        run: |
          # The initialization of rbenv is required before every `bundle` call since Gihub Actions spawns each 'run' step in a separate process
          eval "$(rbenv init - bash)"

          bundle exec fastlane \
          get_alpha_beta_version_number \
          build_version_override:"${BUILD_VERSION_OVERRIDE}" \
          jira_issue_key:"${JIRA_ISSUE_KEY}" \
          branch_name:"${BRANCH_NAME}" \
          build_version_fallback:"${BUILD_VERSION_FALLBACK}"

  build_notification:
    name: Build Notification
    uses: tangem-developments/actions/.github/workflows/notification.yml@feature/IOS-8741_ci_cd_notifications
    needs: prepare
    with:
      channel: 'C08DDBJCP6D'  # TODO: Test only
      status: 'building'
      app_name: '${{ needs.prepare.outputs.version }}'
      deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
      version: '${{ needs.prepare.outputs.version }}'
      build_number: '${{ needs.prepare.outputs.build_number }}'
      changelog: '${{ needs.prepare.outputs.jira_summary }}'
      build_description: '${{ inputs.build_description }}'
      is_archive_analyzed: '${{ inputs.analyze_archive }}'
    secrets:
      SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'

  test_1:
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Test
        run: sleep 15

  # build:
  #   name: Tangem Alpha
  #   needs: prepare
  #   uses: tangem-developments/actions/.github/workflows/build.yml@feature/IOS-8741_ci_cd_notifications
  #   with:
  #     stage: '${{ needs.prepare.outputs.stage }}'
  #     version: '${{ needs.prepare.outputs.version }}'
  #     build_number: '${{ needs.prepare.outputs.build_number }}'
  #     path: 'fastlane/builds/'
  #     filename: 'Tangem-${{ needs.prepare.outputs.stage }}-${{ needs.prepare.outputs.version }}(${{ needs.prepare.outputs.build_number }}).ipa'
  #     xcode_version_override: '${{ inputs.xcode_version_override }}'
  #     # GA boolean inputs are just awful https://stackoverflow.com/questions/76292948
  #     # The reusable workflow requires all input params to be of type string, so we use this ugly ternary operator here
  #     analyze_archive: ${{ inputs.analyze_archive == true && 'true' || 'false' }} # TODO: Test
  #     runner_name: ${{ inputs.runner_name }}
  #   secrets:
  #     FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
  #     IOS_DEPENDENCIES_READ_ONLY_SSH_KEY: '${{ secrets.IOS_DEPENDENCIES_READ_ONLY_SSH_KEY }}'

  test_2:
    runs-on: ubuntu-latest
    needs:
      - test_1
    steps:
      - name: Test
        run: sleep 15

  deploy_notification:
    name: Deploy Notification
    uses: tangem-developments/actions/.github/workflows/notification.yml@feature/IOS-8741_ci_cd_notifications
    needs:
      - test_2
      - prepare
      # - build
      - build_notification
    with:
      channel: 'C08DDBJCP6D'  # TODO: Test only
      message_ts: '${{ needs.build_notification.outputs.ts }}'
      status: 'deploying'
      app_name: '${{ needs.prepare.outputs.version }}'
      deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
      version: '${{ needs.prepare.outputs.version }}'
      build_number: '${{ needs.prepare.outputs.build_number }}'
      changelog: '${{ needs.prepare.outputs.jira_summary }}'
      build_description: '${{ inputs.build_description }}'
      is_archive_analyzed: '${{ inputs.analyze_archive }}'
    secrets:
      SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'

  # deploy:
  #   name: Google Distribution
  #   uses: tangem-developments/actions/.github/workflows/deploy-firebase.yml@feature/IOS-8741_ci_cd_notifications
  #   needs:
  #     - prepare
  #     - build
  #   with:
  #     stage: '${{ needs.prepare.outputs.stage }}'
  #     version: '${{ needs.prepare.outputs.version }}'
  #     build_number: '${{ needs.prepare.outputs.build_number }}'
  #     changelog: '${{ needs.prepare.outputs.jira_summary }}'
  #     build_description: '${{ inputs.build_description }}'
  #     filename: 'Tangem-${{ needs.prepare.outputs.stage }}-${{ needs.prepare.outputs.version }}(${{ needs.prepare.outputs.build_number }}).ipa'
  #     runner_name: ${{ inputs.runner_name }}
  #   secrets:
  #     FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
  #     FIREBASE_CLI_TOKEN: '${{ secrets.FIREBASE_CLI_TOKEN }}'
  #     IOS_DEPENDENCIES_READ_ONLY_SSH_KEY: '${{ secrets.IOS_DEPENDENCIES_READ_ONLY_SSH_KEY }}'

  test_3:
    runs-on: ubuntu-latest
    needs:
      - test_2
    steps:
      - name: Test
        run: sleep 15

  success_notification:
    name: Success Notification
    uses: tangem-developments/actions/.github/workflows/notification.yml@feature/IOS-8741_ci_cd_notifications
    needs:
      - prepare
      # - build
      # - deploy
      - test_3
      - build_notification
    with:
      channel: 'C08DDBJCP6D'  # TODO: Test only
      message_ts: '${{ needs.build_notification.outputs.ts }}'
      status: 'success'
      app_name: '${{ needs.prepare.outputs.version }}'
      deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
      version: '${{ needs.prepare.outputs.version }}'
      build_number: '${{ needs.prepare.outputs.build_number }}'
      changelog: '${{ needs.prepare.outputs.jira_summary }}'
      build_description: '${{ inputs.build_description }}'
      encoded_release_url: '${{ needs.deploy.outputs.encoded_release_url }}'
      is_archive_analyzed: '${{ inputs.analyze_archive }}'
    secrets:
      SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'

  # error_notification:
  #   name: Error Notification
  #   if: failure()
  #   uses: tangem-developments/actions/.github/workflows/notification.yml@feature/IOS-8741_ci_cd_notifications
  #   needs:
  #     - prepare
  #     - build
  #     - deploy
  #     - build_notification
  #   with:
  #     channel: 'C08DDBJCP6D'  # TODO: Test only
  #     message_ts: '${{ needs.build_notification.outputs.ts }}'
  #     status: 'error'
  #     app_name: '${{ needs.prepare.outputs.version }}'
  #     deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
  #     version: '${{ needs.prepare.outputs.version }}'
  #     build_number: '${{ needs.prepare.outputs.build_number }}'
  #     changelog: '${{ needs.prepare.outputs.jira_summary }}'
  #     build_description: '${{ inputs.build_description }}'
  #     is_archive_analyzed: '${{ inputs.analyze_archive }}'
  #   secrets:
  #     SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'

  # cancel_notification:
  #   name: Cancel Notification
  #   if: cancelled()
  #   uses: tangem-developments/actions/.github/workflows/notification.yml@feature/IOS-8741_ci_cd_notifications
  #   needs:
  #     - prepare
  #     - build
  #     - deploy
  #     - build_notification
  #   with:
  #     channel: 'C08DDBJCP6D'  # TODO: Test only
  #     message_ts: '${{ needs.build_notification.outputs.ts }}'
  #     status: 'cancel'
  #     app_name: '${{ needs.prepare.outputs.version }}'
  #     deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
  #     version: '${{ needs.prepare.outputs.version }}'
  #     build_number: '${{ needs.prepare.outputs.build_number }}'
  #     changelog: '${{ needs.prepare.outputs.jira_summary }}'
  #     build_description: '${{ inputs.build_description }}'
  #     is_archive_analyzed: '${{ inputs.analyze_archive }}'
  #   secrets:
  #     SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'
